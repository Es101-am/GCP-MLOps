{
  "components": {
    "comp-get-data": {
      "executorLabel": "exec-get-data",
      "inputDefinitions": {
        "parameters": {
          "project_id": {
            "parameterType": "STRING"
          }
        }
      },
      "outputDefinitions": {
        "artifacts": {
          "dataset_test": {
            "artifactType": {
              "schemaTitle": "system.Dataset",
              "schemaVersion": "0.0.1"
            }
          },
          "dataset_train": {
            "artifactType": {
              "schemaTitle": "system.Dataset",
              "schemaVersion": "0.0.1"
            }
          }
        }
      }
    }
  },
  "defaultPipelineRoot": "gs://magnetic-guild-473821-t7-bucket/pipeline_root",
  "deploymentSpec": {
    "executors": {
      "exec-get-data": {
        "container": {
          "args": [
            "--executor_input",
            "{{$}}",
            "--function_to_execute",
            "get_data"
          ],
          "command": [
            "sh",
            "-c",
            "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip || python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1 python3 -m pip install --quiet --no-warn-script-location 'pandas==1.3.4' 'scikit-learn==1.0.1' 'google-cloud-bigquery==3.13.0' 'db-dtypes==1.1.1'  &&  python3 -m pip install --quiet --no-warn-script-location 'kfp==2.14.3' '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"' && \"$0\" \"$@\"\n",
            "sh",
            "-ec",
            "program_path=$(mktemp -d)\n\nprintf \"%s\" \"$0\" > \"$program_path/ephemeral_component.py\"\n_KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         \"$program_path/ephemeral_component.py\"                         \"$@\"\n",
            "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import *\n\ndef get_data(\n    project_id: str,\n    dataset_train: Output[Dataset],\n    dataset_test: Output[Dataset],\n) -> None:\n    \"\"\"Load data from BigQuery, split train/test, save as CSVs to artifact paths.\"\"\"\n    from sklearn.model_selection import train_test_split\n    import pandas as pd\n    from google.cloud import bigquery\n\n    client = bigquery.Client(project=project_id)\n    job_config = bigquery.QueryJobConfig()\n\n    query = \"\"\"\n    SELECT\n      * EXCEPT(fullVisitorId)\n    FROM\n    (\n      SELECT\n        fullVisitorId,\n        IFNULL(totals.bounces, 0) AS bounces,\n        IFNULL(totals.timeOnSite, 0) AS time_on_site\n      FROM `data-to-insights.ecommerce.web_analytics`\n      WHERE totals.newVisits = 1\n        AND date BETWEEN '20160801' AND '20170430'\n    )\n    JOIN\n    (\n      SELECT\n        fullVisitorId,\n        IF(COUNTIF(totals.transactions > 0 AND totals.newVisits IS NULL) > 0, 1, 0)\n          AS will_buy_on_return_visit\n      FROM `data-to-insights.ecommerce.web_analytics`\n      GROUP BY fullVisitorId\n    )\n    USING (fullVisitorId)\n    LIMIT 100\n    \"\"\"\n\n    df = client.query(query, job_config=job_config).to_dataframe()\n    train, test = train_test_split(df, test_size=0.3, random_state=42)\n\n    train.to_csv(dataset_train.path, index=False)\n    test.to_csv(dataset_test.path, index=False)\n\n"
          ],
          "image": "python:3.8"
        }
      }
    }
  },
  "pipelineInfo": {
    "name": "get-data-only"
  },
  "root": {
    "dag": {
      "tasks": {
        "get-data": {
          "cachingOptions": {
            "enableCache": true
          },
          "componentRef": {
            "name": "comp-get-data"
          },
          "inputs": {
            "parameters": {
              "project_id": {
                "componentInputParameter": "project"
              }
            }
          },
          "taskInfo": {
            "name": "get-data"
          }
        }
      }
    },
    "inputDefinitions": {
      "parameters": {
        "project": {
          "defaultValue": "magnetic-guild-473821-t7",
          "isOptional": true,
          "parameterType": "STRING"
        }
      }
    }
  },
  "schemaVersion": "2.1.0",
  "sdkVersion": "kfp-2.14.3"
}